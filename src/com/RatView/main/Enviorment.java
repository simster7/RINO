/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.RatView.main;

import static com.RatView.main.Main.errorDialog;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.Serializable;
import java.util.ArrayList;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import org.joda.time.LocalDate;
import org.joda.time.LocalTime;

/**
 *
 * @author Simon
 */
public class Enviorment extends javax.swing.JDialog implements Serializable {

    DefaultTableModel model;
    boolean allowTableChanges = true;
    private ArrayList<EnvInfo> data = new ArrayList<>();

    public Enviorment(java.awt.Frame parent, boolean modal, ArrayList<EnvInfo> data) {
        super(parent, modal);
        initComponents();
        this.data = data;

        defaultInfo();
        refreshTrigger();
        addListeners();
        

    }

    public void addListeners() {

        model.addTableModelListener(new TableModelListener() {

            @Override
            public void tableChanged(TableModelEvent e) {
                    System.out.println("kkk");
                if (allowTableChanges) {

                    int row = e.getFirstRow();
                    int col = e.getColumn();

                    if (col == 0) {
                        data.get(row).setDate(new LocalDate(model.getValueAt(row, col)));
                    }
                    if (col == 1) {
                        data.get(row).setTemp((float) model.getValueAt(row, col));
                    }
                    if (col == 2) {
                        data.get(row).setHum((float) model.getValueAt(row, col));
                    }
//                    //save();
                }
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Date", "Temperature", "Humidity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Add Log");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Remove Log");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            Object[] rowDataf = {new LocalDate().toString(), 0.0f, 0.0f};
            EnvInfo si = new EnvInfo(new LocalDate(), 0.0f, 0.0f);
            getData().add(si);
            model.addRow(rowDataf);
//                save();
        } catch (Exception ex) {
            errorDialog("Error adding new log.", "\nPlease make sure a rat is selected.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            getData().remove(jTable1.getSelectedRow());
            refreshTrigger();
        } catch (Exception ex) {
            errorDialog("Error removing log.", "\nPlease make sure a row is selected.");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void defaultInfo() {

        model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
    }

    public void refreshTrigger() {

        allowTableChanges = false;
        defaultInfo();

        if (getData().isEmpty()) {
            model.setRowCount(0);
        } else {
            for (EnvInfo i : getData()) {
                Object[] rowData = {i.getDate().toString(), i.getTemp(), i.getHum()};
                model.addRow(rowData);
            }
        }
        allowTableChanges = true;

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                ArrayList<EnvInfo> test = new ArrayList<>();

                Enviorment dialog = new Enviorment(new javax.swing.JFrame(), true, test);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    public ArrayList<EnvInfo> getData() {
        return data;
    }

    public void setData(ArrayList<EnvInfo> data) {
        this.data = data;
    }
}
